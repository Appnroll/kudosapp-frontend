{"version":3,"sources":["constants/Colors.js","components/Logo.js","components/Header.js","components/Card.js","api/KudosApi.js","components/ListOfCards.js","components/Stats.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["Colors","White","Overcast","WarmGray","Ice","GlacierBlue","Banana","Logo","props","react_default","a","createElement","Header","StyledHeader","Title","components_Logo","Menu","NavLink","to","activeStyle","color","Component","styled","header","_templateObject","ul","_templateObject2","h1","_templateObject3","withRouter","Card","username","_this$props$kudos","this","kudos","name","points","description","from","StyledCard","Row","KudosTitle","KudosMan","slackUser","isSlackUser","KudosPoints","KudosContent","KudosAuthor","li","Card_templateObject","div","Card_templateObject2","strong","Card_templateObject3","span","_templateObject4","_templateObject5","p","_templateObject6","_templateObject7","endpoint","ListOfCards","state","kudoses","_this2","fetch","then","response","json","setState","StyledList","map","index","components_Card","key","ListOfCards_templateObject","Stats","ranking","sort","compare","b","totalPoints","bestScore","_this3","Stats_StyledList","Points","Bar","best","height","calculateBar","Name","Stats_templateObject","Stats_templateObject2","Stats_templateObject3","Stats_templateObject4","Wrapper","LayoutWrapper","components_Header","Container","Switch","Route","exact","path","component","Wrapper_templateObject","main","Wrapper_templateObject2","App","components_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8856797a.chunk.js","sourcesContent":["const Colors = {\n    White: '#FFFFFF',\n    Overcast: '#F1F1F2',\n    WarmGray: '#BCBABE',\n    Ice: '#A1D6E2',\n    GlacierBlue: '#1995AD',\n    Banana: '#FFDB5C'\n}\n\nexport default Colors","import React from 'react';\n\nfunction Logo (props) {\n    return <div></div>\n    // return <img src={'../../public/favicon.ico'}/>\n}\n\nexport default Logo;","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Colors from \"../constants/Colors\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Logo from './Logo'\n\nexport const headerHeight = 70\n\nclass Header extends Component {\n    render() {\n        return (\n            <StyledHeader>\n                <div>\n                    <Title>\n                        <Logo/>\n                        KUDOS<span>ME</span>\n                    </Title>\n                    <Menu>\n                        <li>\n                            <NavLink to=\"/wall\" activeStyle={{ color: Colors.Banana }}>\n                                Wall\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink to=\"/stats\" activeStyle={{ color: Colors.Banana }}>\n                                Statistics\n                            </NavLink>\n                        </li>\n                    </Menu>\n                </div>\n            </StyledHeader>\n        );\n    }\n}\n\nconst StyledHeader = styled.header`\n  width: 100%;\n  height: ${headerHeight}px;\n  background: ${Colors.White};\n  border-bottom: 2px solid ${Colors.Ice};\n  padding: 0 20px;\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  & > div {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      width: 100%;\n      max-width: 1000px;\n      margin: auto;\n  }\n`\nconst Menu = styled.ul`\n  display: flex;\n  li {\n    font-size: 12px;\n    margin-left: 25px;\n    color: ${Colors.WarmGray}\n    text-transform: uppercase;\n    font-weight: 400;\n    letter-spacing: 0.5px;\n  }\n`\nconst Title = styled.h1`\n  font-weight: bold;\n  font-size: 25px;\n  span {\n    color: ${Colors.Banana}\n  }\n`\nexport default withRouter(Header);","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Colors from '../constants/Colors'\n\nclass Card extends Component {\n    isSlackUser (username) {\n        return username[0] === '@'\n    }\n    render() {\n        const { name, points, description, from } = this.props.kudos\n        return (\n            <StyledCard>\n                <Row>\n                    <h6>\n                        <KudosTitle>KUDOS </KudosTitle>\n                        for\n                        <KudosMan slackUser={this.isSlackUser(name)}> {name}</KudosMan>\n                    </h6>\n                    <KudosPoints>\n                        {points > 0 ? '+' + points : points}\n                    </KudosPoints>\n                </Row>\n                <KudosContent>\n                    {description}\n                </KudosContent>\n                <KudosAuthor>\n                    by <KudosMan slackUser={this.isSlackUser(from)}>{from}</KudosMan>\n                </KudosAuthor>\n            </StyledCard>\n        );\n    }\n}\n\nconst StyledCard = styled.li`\n  width: 100%;\n  background: ${Colors.White};\n  box-sizing: border-box;\n  border-radius: 15px;\n  min-height: 50px;\n  margin-top: 20px;\n  padding: 20px;\n  border: 2px solid ${Colors.Ice};\n  h6 {\n    margin-bottom: 10px;\n  }\n`\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\nconst KudosTitle = styled.strong`\n  font-weight: bold;\n  font-size: 14px;\n  margin-right: 3px;\n`\nconst KudosMan = styled.span`\n  color: ${props => props.slackUser ? Colors.GlacierBlue : Colors.WarmGray}\n`\nconst KudosPoints = styled.div`\n  color: ${Colors.Banana}\n`\nconst KudosContent = styled.p`\n  font-size: 16px;\n  font-weight: 300;\n`\nconst KudosAuthor = styled.p`\n  font-size: 12px;\n  margin-top: 20px;\n`\nexport default Card;","const endpoint = 'https://kudos-anr.herokuapp.com/'\n\nexport const getKudoses = () => {\n    return fetch(endpoint + 'kudos')\n        .then(response => {\n            return response.json()\n        })\n}\nexport const getKudosesStats = () => {\n    return fetch(endpoint + 'kudos/ranking')\n        .then(response => {\n            return response.json()\n        })\n}","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Card from \"./Card\";\nimport { getKudoses } from '../api/KudosApi'\n\nclass ListOfCards extends Component {\n    state = {\n        kudoses: []\n    }\n    componentWillMount () {\n        getKudoses()\n            .then(kudoses => {\n                this.setState({\n                    kudoses\n                })\n            })\n    }\n    render() {\n        return (\n            <StyledList>\n                {\n                    this.state.kudoses.map((kudos, index) => <Card kudos={kudos} key={index}/>)\n                }\n            </StyledList>\n        );\n    }\n}\n\nconst StyledList = styled.ul`\n   max-width: 500px;\n   margin: 0 auto 20px;\n`\nexport default ListOfCards;","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Colors from '../constants/Colors'\nimport { getKudosesStats } from \"../api/KudosApi\";\n\nclass Stats extends Component {\n    state = {\n        ranking: []\n    }\n    componentWillMount () {\n        getKudosesStats()\n            .then(ranking => ranking.sort(this.compare))\n            .then(ranking => {\n                this.setState({\n                    ranking\n                })\n            })\n    }\n    compare(a, b) {\n        if (a.totalPoints > b.totalPoints)\n            return -1;\n        else if (a.totalPoints < b.totalPoints)\n            return 1;\n        return 0;\n    }\n    calculateBar (points) {\n        const bestScore = this.state.ranking[0].totalPoints\n        return points > 0 ? (points / bestScore) * 100 : 0\n    }\n    render() {\n        return (\n            <StyledList>\n                {\n                    this.state.ranking\n                        .map((kudos, index) =>\n                        <li key={index}>\n                            <Points>{kudos.totalPoints}</Points>\n                            <Bar best={!index} height={this.calculateBar(kudos.totalPoints)}/>\n                            <Name>{kudos.name}</Name>\n                        </li>\n                    )\n                }\n            </StyledList>\n        );\n    }\n}\n\nconst StyledList = styled.ul`\n   margin: 50px auto 0;\n   display: flex;\n   justify-content: center;\n   overflow-x: scroll;\n   padding: 20px 20px 60px;\n   li {\n    height: 50vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n   }\n`\nconst Bar = styled.div`\n  width: 100px;\n  background: ${Colors.GlacierBlue};\n  height: calc(${props => props.height}%);\n  margin: 10px;\n  position: relative;\n`\nconst Points = styled.div`\n  width: 100%;\n  text-align: center;\n`\nconst Name = styled.div`\n  width: 100%;\n  text-align: center;\n`\n\nexport default Stats;","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport Header, { headerHeight } from './Header'\nimport Colors from '../constants/Colors'\nimport { Switch, Route } from 'react-router-dom'\nimport ListOfCards from \"./ListOfCards\";\nimport Stats from \"./Stats\";\n\nclass Wrapper extends Component {\n    render() {\n        return (\n            <LayoutWrapper>\n                <Header/>\n                <Container>\n                    <Switch>\n                        <Route exact path='/wall' component={ListOfCards}/>\n                        <Route path='/stats' component={Stats}/>\n                    </Switch>\n                </Container>\n            </LayoutWrapper>\n        );\n    }\n}\n\nconst LayoutWrapper = styled.div`\n   background: ${Colors.Overcast};\n   width: 100vw;\n   height: 100vh;\n   overflow: hidden;\n`\n\nconst Container = styled.main`\n  width: 100%;\n  height: calc(100vh - ${headerHeight}px);\n  overflow: scroll;\n  padding: 0 20px;\n  box-sizing: border-box;\n`\nexport default Wrapper;","import React, { Component } from 'react';\nimport Wrapper from \"./components/Wrapper\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/reset.css';\nimport './styles/global.css'\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router>\n    <App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}